@model Models.Framework.Order
@{
    ViewBag.Title = "Paytest";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var ListItem = (BookStore.Models.ListCartItem)ViewBag.Cart;
}


@section scripts{
    <link href="~/Asset/Asset User/css/PagedList.css" rel="stylesheet" />
}

<!-- banner -->
<!-- //banner -->
<!-- top Products -->
<div class="ads-grid py-sm-5 py-4">
    <div class="container py-xl-4 py-lg-2">
        <div class="row">
            <!-- product left -->
            <div class="agileinfo-ads-display col-lg-9">
                <div class="wrapper">
                    <!-- first section -->
                    <div class="product-sec1 px-sm-4 px-3 py-sm-5  py-3 mb-4">
                        <!-- Single Page -->
                        <div class="container">
                            <div class="row">
                                <div class="col-lg-12">
                                    <h3 class="tittle-w3l text-center mb-lg-5 mb-sm-4 mb-3">
                                        Thanh Toán
                                    </h3>
                                    @using (Html.BeginForm())
                                    {
                                        @Html.AntiForgeryToken()

                                        <div class="form-horizontal">
                                            <h4>Order</h4>
                                            <hr />
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ShipName, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-10">
                                                    @Html.EditorFor(model => model.ShipName, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.ShipName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ShipEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-10">
                                                    @Html.EditorFor(model => model.ShipEmail, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.ShipEmail, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ShipMobile, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-10">
                                                    @Html.EditorFor(model => model.ShipMobile, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.ShipMobile, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ShipAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-10">
                                                    @Html.EditorFor(model => model.ShipAddress, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.ShipAddress, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-10">
                                                    @Html.TextAreaFor(model => model.Note, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="col-md-offset-2 col-md-10">
                                                    <input type="submit" value="Đặt Hàng" class="link-product-add-cart btn-update" />
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- //product left -->
            <!-- product right -->
            <div class="col-lg-3 mt-lg-0 mt-4 p-lg-0 " style="background:white">
                <div class="container py-2">
                    <div class="row">
                        <h5 class="col-12 mb-2">Danh sách hàng chọn mua</h5>
                        @foreach (var item in ListItem.Item)
                        {

                            <div class="col-lg-5 pb-2 img-PayListItem">
                                <img src=@item.Book.Image>
                            </div>
                            <div class="col-lg-7 info-pay-List-Item">
                                <ul class="list-group">
                                    <li class="text-truncate"><span data-toggle="tooltip" data-placement="left" title="@item.Book.Name">@item.Book.Name</span></li>
                                    <li>@(item.Book.PromotionPrice<item.Book.Price ?item.Book.PromotionPrice.Value.ToString("N0") : item.Book.Price.Value.ToString("N0"))₫ x @item.Quantity</li>
                                </ul>
                            </div>

                        }
                        <hr>
                        <div class="col-12 text-right">Tổng: @ListItem.Totalmoney.ToString("N0")₫</div>
                    </div>
                </div>
            </div>
            <!-- //product right -->
        </div>
    </div>
</div>

<!-- //top products -->
